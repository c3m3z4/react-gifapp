{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","InputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAgB5C,OACI,8BACI,sBAAMC,SAXO,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAMd,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAnBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,e,+BCPlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAETC,EAFS,iDAEuCC,UAAUH,GAFjD,+DAGII,MAAMF,GAHV,cAGTG,EAHS,gBAIQA,EAAKC,OAJb,uBAIPC,EAJO,EAIPA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAV3B,kBAcRM,GAdQ,4CAAH,sDCaLO,EAXK,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAG9B,OADAc,QAAQC,IAAIN,EAAIC,EAAOV,GAEnB,sBAAKgB,UAAU,2CAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAMR,IACrB,4BAAIA,QCJHS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECCb,SAAEA,GAAe,IAAD,EACdd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAqBxC,OAfAC,qBAAU,WACN1B,EAAQC,GAAU0B,MACd,SAAAC,GACQH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAK1B,CAAEtB,IAKEuB,EDpB0BK,CAAc5B,GAAlCa,EAFwB,EAE7BN,KAAae,EAFgB,EAEhBA,QAGrB,OACI,qCACI,6BAAKtB,IAEHsB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAGQL,EAAOJ,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,eAGQA,GADCA,EAAIC,aEYtBkB,EA7BM,WAAM,MAGa3C,mBAAS,CAAC,cAHvB,mBAGhB4C,EAHgB,KAGJ7C,EAHI,KAQvB,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAE7B,uBAEA,6BAEQ6C,EAAWrB,KAAI,SAAAT,GAAQ,OACtB,cAAC,EAAD,CACGA,SAAUA,GACLA,YCjB7B+B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.686aeddd.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({setCategories}) => {\n\n    const [InputValue, setInputValue] = useState('')\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (InputValue.trim().length > 2) {\n            \n            setCategories( cats => [InputValue, ...cats]);\n            setInputValue('');\n        }\n    }\n\n    return (\n        <div>\n            <form onSubmit={ handleSubmit }>\n                <input\n                    type=\"text\"\n                    value={InputValue }\n                    onChange={ handleInputChange }\n                />\n            </form>\n        </div>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\n","export const getGifs = async ( category ) => {\n\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=TPWG105zar28SdPzlUvMR909xOnUuYkn`;\n        const resp = await fetch(url);\n        const { data } = await resp.json();\n\n        const gifs = data.map(img => {\n            return {\n                id: img.id,\n                title: img.title,\n                url: img.images?.downsized_medium.url\n                }\n        })\n\n        return gifs\n    }","import React from 'react'\n\nconst GifGridItem = ( {id, title, url} ) => {\n\n    console.log(id, title, url);\n    return (\n        <div className=\"card animate__animated animate__fadeInUp\">\n            <img src={url} alt={ title } />\n            <p>{title}</p>\n        </div>\n    )\n}\n\nexport default GifGridItem\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport GifGridItem from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    const { data:images, loading } = useFetchGifs( category );\n\n\n    return (\n        <>\n            <h3>{category}</h3>\n            \n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\n\n            <div className=\"card-grid\">\n            \n                {\n                    images.map((img) => (\n                        <GifGridItem\n                            \n                            key={img.id}\n                            {...img}\n                        />\n                    ))\n                }\n            </div>\n         </>\n    )\n}\n\n","import { useState, useEffect } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\n\n\nexport const useFetchGifs = ( category ) => {\n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        getGifs(category).then(\n            imgs => {\n                    setstate({\n                        data: imgs,\n                        loading: false\n                    })\n          \n            }\n        )\n    }, [ category ])\n\n\n\n\n    return state;\n\n}","import React, { useState } from 'react'\nimport { AddCategory } from './AddCategory'\nimport { GifGrid } from './GifGrid'\n\nconst GifExpertApp = () => {\n\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\n    const [categories, setCategories] = useState(['One Punch'])\n    // const handleAdd = (e) => {\n    //     setCategories([...categories, 'arifureta'])\n    // }\n\n    return (\n        <div>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={ setCategories }/>\n\n            <hr />\n\n            <ol>\n                {\n                    categories.map(category =>\n                    (<GifGrid\n                        category={category}\n                        key={category}\n                    />\n                    ))\n                }\n            </ol>\n        </div>\n    )\n}\n\nexport default GifExpertApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './components/GifExpertApp'\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}